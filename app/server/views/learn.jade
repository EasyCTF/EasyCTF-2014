extends layout

block content
	div(class='wrapper')
		div(class='main')
			section(id='page1')
				div(class='page-container')
					center
						div(class='jumbotron page-title')
							h1 Learn
			section(id='page2')
				div(class='page-container')
					div(class='page-header')
						h2 Python Crash Course
					div(class='well')
						h3 Introduction
						p
							| If you have little to absolutely no programming experience, this will be helpful. This is a crash course of the most basic terms/syntax and functions of Python (since our IDE which will be used for some problems is optimized for Python).
						p
							| What can you do in Python? Lots of things! What may be useful for this competition is learning everything you need to write algorithms to solve problems and basic tools such as <i>printing</i>.
						p
							| Some unique properties of Python is that we use indentation instead of brackets, and declaring variable types and using semicolons are optional.
						h3 Variables
						p
							| Variables store values that can be looked at or changed later. You do <b>not</b> need to need to declare variable types before assigning them. However, you must initialize them before you call them. Different types of variables include:
							ul
								li.
									integer - a number that is not a fraction. <br />
									Examples: <code>-1, 2, 105676 etc.</code><br />
									To define, use the following syntax: <br />
									<code>myint = 2</code><br />
								li.
									floating point - a number that has decimal values. <br />
									Examples: <code>1.0, -2.73, 0.66</code><br />
									To define: <br />
									<code>myfloat = 7.3</code><br />
									or <br />
									<code>myfloat = float(7)</code><br />
									With integers and floating points, you can perform basic math operations on them such as + - / *. <br />
								li.
									string - text surrounded by double or single quotes. <br />
									Examples: <code>"Hello", 'World'</code><br />
									To define: <br />
									<code>hello = "Hello"</code><br />
									<code>world = "World"</code><br />
									You can also add strings together like this: <br />
									<code>helloworld = hello + " " + world</code><br />
									This makes <code>helloworld</code> store the value <code>"Hello World"</code><br />
									<h4>PLEASE DO NOT SUBTRACT STRINGS</h4>
								li.
									character - a single symbol represented by a letter or number surrounded by single quotes. <br />
									Examples: <code>'A', '4', 'k'</code><br />
									To define: <br />
									<code>mychar = 'h'</code> <br />
									Single characters can be converted to their ASCII identifiers using the <code>ord()</code> function. Similarly, to convert an ASCII identifier back to a readable character, use the <code>chr()</code> function.
						h3 Writing Functions
						p
							ul
								li.
									To define: <br />
									<code>def func_name():</code>
								li.
									Any code inside the function should be indented until you want to exit the function.
								li.
									You can put <i>parameters</i> - information passed to the function for use inside it - in a function as well. Here is a simple example: <br />
									<code>def func_name(a,b,c):<br />
										&nbsp;&nbsp;&nbsp;&nbsp;print(a,b)<br />
										&nbsp;&nbsp;&nbsp;&nbsp;print(c)</code><br />
									func_name(3,7,"hello") would <i>print</i> an output of:<br />
									<code>10<br />
									"Hello"</code><br />
						h3 Loops
						p
							ul
								li.
									For-Loops will come in handy during the competition, especially in challenges that ask you to brute force answers. Basically, a for loop will repeat whatever code is inside it a certain number of times. <br />
								li.
									To define: <br />
									<code>for x in range(a,b,c):</code><br />
									What this means is for each number (x) inside the range [a,b), meaning the range includes 'a' but doesn't include 'b', it will skip every c number (if you don't include a c parameter, it will default to just incrementing by 1)<br />
								li.
									For example:<br />
									<code>for x in range(0,10,2):<br />
										&nbsp;&nbsp;&nbsp;&nbsp;print(x)</code><br />
									would print <code>0,2,4,6,8</code>, with each number on a new line.
								li.
									Another example:<br />
									<code>for x in range(0,5):<br />
									&nbsp;&nbsp;&nbsp;&nbsp;print("hello")<br />
									</code>
									would print <code>"hello"</code> 5 times, which each "hello" on a new line.
						h3 If, Else If, Else Statements
						p
							ul
								li.
									If, Else If, and Else are conditional statements, meaning that the condition set by the statement decides which statement will be executed.
								li.
									The format is usually as follows:<br />
									<code>if (condition1):<br />
									&nbsp;&nbsp;&nbsp;&nbsp; code to be executed<br />
									elif (condition2):<br />
									&nbsp;&nbsp;&nbsp;&nbsp; different code to be executed<br />
									{more elifs if needed}<br />
									else:<br />
									&nbsp;&nbsp;&nbsp;&nbsp; another different set of code to be executed<br />
									</code>
								li.
									For example:<br />
									<code>
									for x in range(0,5):<br />
									&nbsp;&nbsp;&nbsp;&nbsp;if (x == 0):<br />
									&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print("hello")<br />
									&nbsp;&nbsp;&nbsp;&nbsp;elif (x == 1 or x == 2):<br />
									&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print("second or third")<br />
									&nbsp;&nbsp;&nbsp;&nbsp;elif (x == 3):<br />
									&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print("4")<br />
									&nbsp;&nbsp;&nbsp;&nbsp;else:<br />
									&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print("last x value left to check")<br />
									</code>
									would print <code>"hello", "second or third", "second or third", "4", "last x value left to check"</code> with each string on a new line.<br />
									Notice how all the terms aren't just printed 5 times each as in the second example in the For-Loops section.
			section(id='page3')
				div(class='page-container')
					div(class='page-header')
						h2 Resources
					div(class='well')
						p There's tons of resources on the internet nowadays, and we've compiled a handy list for you in case you want to learn more about anything. Know of a good resource that's not on here and should be? Email it to us at <a href="mailto:team@easyctf.com" target="_blank">team@easyctf.com</a>.
						h3 Programming in General
						p 
							ul
								li <a href="http://www.freeprogrammingresources.com/" target="_blank">Directory of Programming Resources</a> <br />
								li <a href="https://github.com/vhf/free-programming-books/blob/master/free-programming-books.md" target="_blank">Github List of Free Programming Books</a> <br />
								li <a href="http://programming-motherfucker.com/become.html" target="_blank">Another List of Free Programming Books</a> <br />
								li <a href="http://learnxinyminutes.com/" target="_blank">Learn X in Y Minutes: Programming Tutorials</a> <br />
								li <a href="http://teamtreehouse.com/library/introduction-to-programming" target="_blank">Treehouse: Programming Tutorials</a> <br />
								li <a href="http://www.codecademy.com/" target="_blank">Codecademy: Lessons in Python, JavaScript, HTML/CSS, PHP, and More</a>
								li <a href="http://codingbat.com/" target="_blank">CodingBat: Lessons in Python and Java</a> - note: Java and JavaScript are <i><u>not</u></i> the same!<br />
								li <a href="http://cli.learncodethehardway.org/book/" target="_blank">Command Line Crash Course</a> <br />
								li <a href="http://interactivepython.org/courselib/static/pythonds/index.html" target="_blank">Python: Data Structures & Algorithms</a><br />
								li <a href="http://alexnisnevich.github.io/untrusted/" target="_blank">Untrusted: A Beginner JavaScript Game</a> <br />
						h3 CTF Related
						p
							ul
								li <a href="http://www.endgame.com/blog/how-to-get-started-in-ctf.html" target="_blank">Tips on Getting Started in CTF</a><br />
								li <a href="https://ctftime.org/" target="_blank">CTFTime: List of Upcoming CTFs & Write-Ups of Past CTFs</a> <br />
								li <a href="http://repo.shell-storm.org/CTF/" target="_blank">Shell Storm CTF Repository</a> <br />
								li <a href="http://captf.com/practice-ctf/" target="_blank">Practice CTF List</a> <br />
								
						h3 Cryptography
						p
							ul
								li <a href="http://rumkin.com/tools/cipher/" target="_blank">Ciphers & Codes: Web-Based Tools</a><br />
								li <a href="http://www.garykessler.net/library/crypto.html" target="_blank">Overview of Cryptography</a><br />
								li <a href="https://www.khanacademy.org/computing/computer-science/cryptography" target="_blank">Khanacademy: Cryptography Course</a><br />
						h3 Exploitation
						p
							ul
								li <a href="http://en.wikipedia.org/wiki/Exploit_(computer_security)" target="_blank">Wikipedia: Exploitation</a><br />
								li <a href="http://exploit-exercises.com/" target="_blank">Exploitation Exercises</a><br />
								li <a href="http://en.wikipedia.org/wiki/Code_injection" target="_blank">Wikipedia: Code Injection</a><br />
						h3 Networking
						p
							ul
								li <a href="https://www.digitalocean.com/community/tutorials/an-introduction-to-networking-terminology-interfaces-and-protocols" target="_blank">Introduction to Networking Terminology</a><br />
								li <a href="http://intronetworks.cs.luc.edu/current/html/" target="_blank">Introduction to Computer Networks</a><br />
						h3 Reverse Engineering
						p
							ul
								li <a href="https://www.udemy.com/blog/reverse-engineering-tutorial/" target="_blank">Reverse Engineering Brief Overview</a><br />
								li <a href="http://beginners.re/RE_for_beginners-en.pdf" target="_blank">x86 Assembly and ARM Code for Beginners</a><br />
								li <a href="http://repo.hackerzvoice.net/depot_madchat/windoz/win32inc/reversing/re.pdf" target="_blank">Reverse Engineering Course: Assembly & More</a><br />